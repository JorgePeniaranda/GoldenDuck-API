# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Investment {
  account: Account!
  id: ID!
  idAccount: Float!
  amount: Float!
  interest: Float!
  dateEnd: DateTime!
  updatedAt: DateTime!
  createdAt: DateTime!
  canceled: Boolean!
  receiver: Account!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Loan {
  account: Account!
  id: ID!
  idAccount: Float!
  amount: Float!
  interest: Float!
  dateEnd: DateTime!
  updatedAt: DateTime!
  createdAt: DateTime!
  canceled: Boolean!
}

type Category {
  transactions: Transaction
  id: ID!
  name: String!
  updatedAt: DateTime!
  createdAt: DateTime!
  deleted: Boolean!
  transaction: [Transaction!]!
}

type Transaction {
  Sender: Account!
  Receiver: Account!
  category: Category
  id: ID!
  idSender: Float!
  idReceiver: Float!
  amount: String!
  idCategory: Float
  createdAt: DateTime!
  canceled: Boolean!
  sender: Account!
  receiver: Account!
}

type Message {
  sender: User!
  receiver: User!
  id: ID!
  idSender: Float!
  idReceiver: Float!
  message: String!
  read: Boolean!
  updatedAt: DateTime!
  createdAt: DateTime!
  deleted: Boolean!
}

type Notification {
  user: User!
  id: ID!
  idUser: Float!
  message: String!
  read: Boolean!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Session {
  user: User!
  id: ID!
  idUser: Float!
  ip: String
  userAgent: String
  location: String
  deviceType: String
  token: String!
  active: Boolean!
  logoutAt: DateTime
  expiredAt: DateTime!
  createdAt: DateTime!
}

type User {
  accounts: [Account!]!
  sessions: [Session!]
  notifications: [Notification!]
  messagesSend: [Message!]
  messagesReceived: [Message!]
  id: ID!
  name: String!
  lastName: String!
  dni: String!
  email: String!
  phoneNumber: Float!
  address: String!
  birthDate: DateTime!
  sex: String!
  imgUrl: String
  updatedAt: DateTime!
  createdAt: DateTime!
  actived: Boolean!
  deleted: Boolean!
  role: String!
}

type Account {
  user: User!
  cards: [Card!]
  transactionsSend: [Transaction!]
  transactionsReceived: [Transaction!]
  loans: [Loan!]
  investments: [Investment!]
  id: Float!
  idUser: Float!
  balance: String!
  deleted: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Card {
  account: Account!
  id: ID!
  idAccount: Float!
  number: Float!
  cvv: Float!
  expiration: DateTime!
  updatedAt: DateTime!
  createdAt: DateTime!
  deleted: Boolean!
  accounts: Account!
}

type JwtPayload {
  id: ID!
  role: String!
}

type Token {
  token: String!
}

type Error {
  id: ID!
  name: String
  message: String
  stack: String
  updatedAt: DateTime!
  createdAt: DateTime!
  deleted: Boolean!
}

type Query {
  login: Token!
  verify_auth: JwtPayload!
  current_user_info: User!
  find_user(params: GQLFindUserDTO!): User!
  find_all_account: Account!
  find_one_account(index: Int!): Account!
  find_all_card(AccountIndex: Int!): Card!
  find_one_card(AccountIndex: Int!, index: Int!): Card!
  find_all_transaction(AccountIndex: Int!): [Transaction!]!
  find_one_transaction(AccountIndex: Int!, index: Int!): Transaction!
  find_one_transaction_sent(AccountIndex: Int!, index: Int!): Transaction!
  find_one_transaction_received(AccountIndex: Int!, index: Int!): Transaction!
  find_all_loan(AccountIndex: Int!): Loan!
  find_one_loan(AccountIndex: Int!, index: Int!): Loan!
  find_all_investment(AccountIndex: Int!): [Investment!]!
  find_one_investment(AccountIndex: Int!, index: Int!): Investment!
  find_all_category: [Category!]!
  find_one_category(id: Int!): [Category!]!
  find_all_session: [Session!]!
  find_one_session(index: Int!): Session!
  find_all_message: Message!
  find_message_history: [Message!]!
  find_chat(idTarget: Int!): Message!
  find_one_message(idTarget: Int!, index: Int!): Message!
  find_all_notification: [Notification!]!
  find_one_notification(index: Int!): [Notification!]!
  find_all_error: Error!
  find_one_error(id: Int!): Error!
}

input GQLFindUserDTO {
  dni: String
  email: String
  phoneNumber: String
}

type Mutation {
  create_user(user: GQLCreateUserDTO!): User!
  update_user(data: GQLUpdateUserDTO!): User!
  delete_user(data: GQLDeleteUserDTO!): User!
  create_account: Account!
  delete_account(index: Int!): Account!
  create_card(AccountIndex: Int!): Card!
  delete_card(AccountIndex: Int!, index: Int!): Card!
  create_transaction(AccountIndex: Int!, data: GQLCreateTransactionDTO!): Transaction!
  delete_transaction(AccountIndex: Int!, index: Int!): Boolean!
  create_loan(data: GQLCreateLoanDTO!): Loan!
  delete_loan(AccountIndex: Int!, index: Int!): Loan!
  create_investment: Investment!
  delete_investment(AccountIndex: Int!, index: Int!): Investment!
  create_category(data: GQLCreateCategoryDTO!): [Category!]!
  delete_category(id: Int!): [Category!]!
  delete_session(index: Int!): Session!
  create_message(idTarget: Int!): Message!
  update_message(idTarget: Int!, index: Int!): Message!
  delete_message(idTarget: Int!, index: Int!): Message!
  read_message(idTarget: Int!, index: Int!): Message!
  delete_notification(index: Int!): [Notification!]!
  create_error(data: GQLCreateErrorDTO!): Error!
  delete_error(id: Int!): Error!
}

input GQLCreateUserDTO {
  name: String!
  lastName: String!
  dni: String!
  email: String!
  phoneNumber: String!
  password: String!
  address: String!
  birthDate: DateTime!
  sex: String!
}

input GQLUpdateUserDTO {
  name: String
  lastName: String
  email: String
  phoneNumber: String
  password: String
  address: String
  imgUrl: String
  role: String
}

input GQLDeleteUserDTO {
  password: String!
}

input GQLCreateTransactionDTO {
  idReceiver: Float!
  amount: Float!
}

input GQLCreateLoanDTO {
  idAccount: Float!
  amount: Float!
  interest: Float!
  dateEnd: DateTime!
}

input GQLCreateCategoryDTO {
  name: String!
}

input GQLCreateErrorDTO {
  name: String!
  message: String!
  stack: String!
}